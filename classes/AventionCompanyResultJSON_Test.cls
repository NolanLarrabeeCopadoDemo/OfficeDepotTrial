//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class AventionCompanyResultJSON_Test {
	public static String json = '{"consumedCredits":1,"consumedBusinessContactCredits":0,"resultType":"company","result":{"entityType":"company","id":"d0da30db-a720-3754-9f67-fc77a4d38744","keyId":21436,"dunsNumber":"153531108","companyName":"Office Depot, Inc.","areaCode":"561","phone":"561-438-4800","fiscalYearEnd":"2017-12-31T05:00:00Z","assets":6.39E9,"assetsUsd":6.39E9,"assetsEur":5.3462959E9,"assetsGbp":4.7506113E9,"currencyIso3":"USD","onFortune1000":true,"fortune1000Ranking":281,"numEmployees":45000,"numOneSourceContacts":2820,"primaryUrl":"http://www.officedepot.com","publicOrTopUK":true,"publicUS":true,"quotedStatus":true,"sales":1.024E10,"salesUsd":1.024E10,"salesEur":9.0698965E9,"salesGbp":7.9485015E9,"sales1YearGrowth":-7.0865002,"topUK":false,"onBritishDoNotCallList":false,"yearFounded":1986,"auditor":"Deloitte & Touche LLP","bank":"Jpmorgan Chase Bank N.A., U.S. Bank Eqoipment Finance A Division Of U.S. Bank N.A., U.S. Bank Equipment Finance A Division Of U.S. Bank N.A., Banc Of America Leasing & Capital Llc, Crown Credit, Ibm Credit Llc, Oracle Credit Corp, Signature Financial Llc, Suntrust Equipment Finance & Leasing Corp, Goldman Sachs Lending Partners Llc, Guilbert Uk Pension Trustees Limited","marketValue":1.8574187E9,"marketValueUsd":1.8574187E9,"marketValueEur":1.5933524E9,"marketValueGbp":1.4277622E9,"marketValueDate":"2018-08-31","gazetteCode":false,"leId":"549300OI428NU7XTM839","currentRatio":[{"value":1.4032,"statementDate":"2017-12-31T05:00:00Z"}],"quickRatio":[{"value":0.759,"statementDate":"2017-12-31T05:00:00Z"}],"netProfitMargin":[{"value":1.7676,"statementDate":"2017-12-31T05:00:00Z"}],"grossProfit":[{"value":2.461E9,"gbp":1.829617349025E9,"eur":2.059035156708E9,"usd":2.461E9,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"grossMargin":[{"value":24.0332,"statementDate":"2017-12-31T05:00:00Z"}],"operatingMargin":[{"value":4.2871,"statementDate":"2017-12-31T05:00:00Z"}],"returnOnAssets":[{"value":3.0515,"statementDate":"2017-12-31T05:00:00Z"}],"returnOnEquity":[{"value":9.1138,"statementDate":"2017-12-31T05:00:00Z"}],"cashEquivalents":[{"value":6.22E8,"gbp":4.62422588823E8,"eur":5.20406285035E8,"usd":6.22E8,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"leaseHirePurchaseShortTerm":[{"value":9.6E7,"gbp":7.137068895E7,"eur":8.0319941099E7,"usd":9.6E7,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"totalCurrentAssets":[{"value":2.871E9,"gbp":2.134429666416E9,"eur":2.402068238483E9,"usd":2.871E9,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"totalCurrentLiabilities":[{"value":2.046E9,"gbp":1.521087808251E9,"eur":1.711818744666E9,"usd":2.046E9,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"totalShareholdersEquity":[{"value":2.138E9,"gbp":1.589484718495E9,"eur":1.788792021553E9,"usd":2.138E9,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"netIncome":[{"value":1.81E8,"gbp":1.40495979197E8,"eur":1.60317508504E8,"usd":1.81E8,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"totalDebt":[{"value":1.808E9,"gbp":1.344147975228E9,"eur":1.512692224026E9,"usd":1.808E9,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"longTermDebt":[{"value":1.663E9,"gbp":1.236348497127E9,"eur":1.391375646325E9,"usd":1.663E9,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"longTermLiabilities":[{"value":2.139E9,"gbp":1.590228163171E9,"eur":1.789628687606E9,"usd":2.139E9,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"totalExpenses":[{"value":2.022E9,"gbp":1.569518618434E9,"eur":1.790950288371E9,"usd":2.022E9,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"normalizedEBIT":[{"value":3.61E8,"gbp":2.80215737515E8,"eur":3.19749284917E8,"usd":3.61E8,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"normalizedEBITDA":[{"value":6.18E8,"gbp":4.79704503557E8,"eur":5.47382432351E8,"usd":6.18E8,"statementDate":"2017-12-31T05:00:00Z","currencyISO3":"USD"}],"competitorIds":["1026","3875","8764","8872","29250","29525","30257","67376","167939","177272","383072","741945","746319","42017724","43940389","43940398","44481068","96328324","137702332"],"totalCorpFamilyMembers":2194,"hasCompanyLogo":true,"altNames":["\"NASDAQ: ODP\"","\"Office Depot\""],"directMarketingStatus":"Has Not Opted Out of Direct Marketing","addresses":[{"addressType":"primary","address1":"6600 N Military Trl","city":"Boca Raton","postalCode":"33496-2434","postalCodePrefix":"334","county":{"name":"Palm Beach"},"state":{"name":"Florida","abbreviation":"FL"},"country":{"name":"United States","iso2":"US","iso3":"USA","isoNumber":840,"intlCallingCode":"+1","internationalRegion":{"name":"North America"}},"zipPlus4Code":"2434","msaCode":33100,"nationalRegion":{"name":"South Atlantic"}}],"businessDescriptions":[{"description":"Paper and pens have made room for PC repair and point-of-sale services at office products giant Office Depot (#2 worldwide behind Staples). The office supply chain operates some 1,400 retail stores under the Office Depot and OfficeMax names through which it sells a wide selection of office and school supplies, furniture, printers, and breakroom and cleaning products. It has also moved into IT support and other business-to-business services, which it offers through CompuCom and other brands. After divesting all its international holdings, Office Depot operates entirely in North America.","isPrimary":true,"vendor":{"vendorFeedId":94,"vendorFeedName":"Legacy_Hoovers","displayName":"D&B"}},{"description":"Office Depot, Inc. provides a selection of products and services to consumers and businesses of various sizes. The Company\'s segments include North American Retail Division and North American Business Solutions Division. The North American Retail Division includes retail stores in the United States, including Puerto Rico and the United States Virgin Islands, which offer office supplies, technology products and solutions, business machines and related supplies, facilities products and office furniture. The North American Business Solutions Division sells office supply products and services throughout North America, including the United States, Puerto Rico, the United States Virgin Islands and Canada. It operates under the Office Depot and OfficeMax brands, and utilizes other Company and product brand names, including Grand & Toy in Canada. It offers its products under various labels, such as Foray, Ativa, TUL, Realspace, WorkPro, Brenton Studio, Highmark and Viking Office Products.","isPrimary":false,"vendor":{"vendorFeedId":20,"vendorFeedName":"Reuters","displayName":"Reuters"}},{"description":"Office Depot, Inc. (Office Depot) provides office supplies, business products and services through an omni-channel platform. It manages retail sales operations through multiple channels, consisting of retail stores, a business to business sales force, internet sites, an inside sales organization, direct marketing catalogues, and call centers.  The company operates through three reportable segments: Retail, Business Solutions, and the CompuCom, which accounted for 48.5%, 50%, and 1.5% of the company’s total revenue.   The company serves its customers through its 1,378 retail stores under various banners. It also sells merchandise online through a network of e-commerce websites in the US, Puerto Rico, and Canada.  It operates 51 distribution centers and crossdock facilities across the US, Puerto Rico, and Canada. The company also operates a global sourcing office in Shenzhen, China to manage its product sourcing, logistics, and quality assurance.","isPrimary":false,"vendor":{"vendorFeedId":11,"vendorFeedName":"GlobalData","displayName":"Global Data"}},{"description":"Office Depot, Inc. (Office Depot) is a global supplier of office products and services and solutions. The company offers its products through a wide network of distribution centers and cross-docks to small, medium and large enterprises alike. It carries out business through multiple channels comprising office supply stores, internet sites, outbound telephone account management sales force, contract sales force, direct marketing catalogues and call centers. The company markets products under the brands including Office Depot, OfficeMax, Foray, Ativa, TUL, Realspace, WorkPro, Brenton Studio, Highmark, and Grand & Toy. The company has operations in the US and Canada. Office Depot is headquartered in Boca Raton, Florida, the US.The company reported revenues of (US Dollars) US$10,240 million for the fiscal year ended December 2017 (FY2017), a decrease of 7.1% over FY2016. In FY2017, the company’s operating margin was 3.3%, compared to an operating margin of 4.7% in FY2016. In FY2017, the company recorded a net margin of 1.8%, compared to a net margin of 4.8% in FY2016.","isPrimary":false,"vendor":{"vendorFeedId":11,"vendorFeedName":"GlobalData","displayName":"Global Data"}}],"industries":[{"isPrimary":true},{"isPrimary":false,"industry":{"id":"e1858ef0-cfee-3cec-a862-015fcfa2cb78","source":"ANZSIC","code":"3492","shortDescription":"Computer and Computer Peripheral Wholesaling"}},{"isPrimary":false,"industry":{"id":"4dee1d91-70a6-3e71-aaaf-781543250926","source":"ANZSIC","code":"3499","shortDescription":"Other Machinery and Equipment Wholesaling Not Elsewhere Classified"}},{"isPrimary":false,"industry":{"id":"0576e905-77b8-305e-8a4e-5750b1d7b470","source":"ANZSIC","code":"4222","shortDescription":"Computer and Computer Peripheral Retailing"}},{"isPrimary":false,"industry":{"id":"c9fb04d7-96b6-373b-9da2-b3508739d0d3","source":"GDSSIC","code":"50440000","shortDescription":"Office equipment"}},{"isPrimary":false,"industry":{"id":"a51b6bdd-9046-35c4-b51b-ba0b18edf74e","source":"GDSSIC","code":"50459905","shortDescription":"Computers, nec"}},{"isPrimary":false,"industry":{"id":"bfc61207-3b8c-3a85-9602-f9a58e7afc19","source":"GDSSIC","code":"57349901","shortDescription":"Personal computers"}},{"isPrimary":false,"industry":{"id":"689bec32-d139-3ff3-b08a-cd8efb612653","source":"ISICRev4","code":"4651","shortDescription":"Wholesale of computers, computer peripheral equipment and software"}},{"isPrimary":false,"industry":{"id":"a0c80235-cf24-36d7-beb0-280b57eae703","source":"ISICRev4","code":"4659","shortDescription":"Wholesale of other machinery and equipment"}},{"isPrimary":false,"industry":{"id":"7a238f8c-d973-3050-b049-bb126a14230f","source":"ISICRev4","code":"4741","shortDescription":"Retail sale of computers, peripheral units, software and telecommunications equipment in specialized stores"}},{"isPrimary":false},{"isPrimary":false},{"isPrimary":false},{"isPrimary":false,"industry":{"id":"40cacfd0-62a7-3040-8ae6-e2237dcee892","source":"NACERev2","code":"4651","shortDescription":"Wholesale of computers, computer peripheral equipment and software"}},{"isPrimary":false,"industry":{"id":"61882f7a-3f36-3a17-857c-c6e2a331ad08","source":"NACERev2","code":"4666","shortDescription":"Wholesale of other office machinery and equipment"}},{"isPrimary":false,"industry":{"id":"5389a281-35c0-36c1-8ff1-e0bcc3700fe0","source":"NACERev2","code":"4741","shortDescription":"Retail sale of computers, peripheral units and software in specialised stores"}},{"isPrimary":false},{"isPrimary":false},{"isPrimary":false},{"isPrimary":false,"industry":{"id":"a4fd4720-66fa-38d1-a5f6-4e64706c0028","source":"NAICS2012","code":"423420","shortDescription":"Office Equipment Merchant Wholesalers"}},{"isPrimary":false,"industry":{"id":"091e367e-c2d9-3afc-a3bd-9b7e14e42249","source":"NAICS2012","code":"423430","shortDescription":"Computer and Computer Peripheral Equipment and Software Merchant Wholesalers"}},{"isPrimary":false,"industry":{"id":"6d374218-5acb-346a-b75d-8b9d553c1a4e","source":"NAICS2012","code":"443142","shortDescription":"Electronics Stores"}},{"isPrimary":false,"industry":{"id":"15a96f1f-873c-3cc3-b2e5-f7b4cde34610","source":"UK2003","code":"5184","shortDescription":"Wholesale of computers, computer peripheral equipment and software"}},{"isPrimary":false,"industry":{"id":"867d8eaa-7291-3efa-a495-d153ee9de21d","source":"UK2003","code":"5185","shortDescription":"Wholesale of other office machinery and equipment"}},{"isPrimary":false,"industry":{"id":"9b627c5e-8b51-352f-8945-3283d54f1d38","source":"UK2003","code":"52482","shortDescription":"Retail sale of photographic, optical and precision equipment, office supplies and equipment (including computers, etc)"}},{"isPrimary":false,"industry":{"id":"f7337948-2246-3edd-a906-04ed1815ffd5","source":"UK2007","code":"4651","shortDescription":"Wholesale of computers, computer peripheral equipment and software"}},{"isPrimary":false,"industry":{"id":"7ef5020f-ad77-312d-af35-04e93bdf0376","source":"UK2007","code":"4666","shortDescription":"Wholesale of other office machinery and equipment"}},{"isPrimary":false,"industry":{"id":"ff0d9ef2-2850-3ea3-b97e-1f9ae2b778de","source":"UK2007","code":"4741","shortDescription":"Retail sale of computers, peripheral units and software in specialised stores"}},{"isPrimary":false,"industry":{"id":"1925df36-9e3c-380d-840c-b2507ec1ed67","source":"US87","code":"5044","shortDescription":"Office Equipment"}},{"isPrimary":false,"industry":{"id":"3d08be56-2fe9-3657-8f71-14aef2bd8247","source":"US87","code":"5045","shortDescription":"Computers and Computer Peripheral Equipment and Software"}},{"isPrimary":false,"industry":{"id":"89602e54-8473-352c-99ec-4c89c227dd06","source":"US87","code":"5734","shortDescription":"Computer and Computer Software Stores"}},{"isPrimary":true,"industry":{"id":"c0c4b4b4-b1fe-310e-be69-265f9cf1cf60","source":"ANZSIC","code":"4272","shortDescription":"Stationery Goods Retailing"}},{"isPrimary":true,"industry":{"id":"5248af19-c33b-365c-b473-2a7f27d72678","source":"GDSSIC","code":"59439902","shortDescription":"Office forms and supplies"}},{"isPrimary":true,"industry":{"id":"20d6bb57-3d74-362f-99a0-d2328f074afe","source":"ISICRev4","code":"4761","shortDescription":"Retail sale of books, newspapers and stationary in specialized stores"}},{"isPrimary":true},{"isPrimary":true,"industry":{"id":"6e364f03-4ad0-32c0-a7cf-3a7640ae808d","source":"NACERev2","code":"4762","shortDescription":"Retail sale of newspapers and stationery in specialised stores"}},{"isPrimary":true},{"isPrimary":true,"industry":{"id":"a44c2839-6bdc-36c4-9396-1d1e42ebc6e6","source":"NAICS2012","code":"453210","shortDescription":"Office Supplies and Stationery Stores"}},{"isPrimary":true,"industry":{"id":"aa13e1f8-9c81-3f7b-b13b-9c53b6f4ea6b","source":"UK2003","code":"5247","shortDescription":"Retail sale of books, newspapers and stationery"}},{"isPrimary":true,"industry":{"id":"150c1fb6-ce34-3918-bdd3-ec7e63117d34","source":"UK2007","code":"4762","shortDescription":"Retail sale of newspapers and stationery in specialised stores"}},{"isPrimary":true,"industry":{"id":"9a705b45-de7c-3c0a-9abb-61e564c50081","source":"US87","code":"5943","shortDescription":"Stationery Stores"}}],"securities":[{"tickerSymbol":"ODP","exchange":{"stockExchange":"NASDAQ","quoteExchangeCode":"NASDAQ"}}],"primaryIndustry":{"id":"aaa58c95-f182-3d68-9a93-7aec72ff7164","shortDescription":"Miscellaneous Store Retailers","source":"OS2010","code":"112"},"ownershipType":{"id":"ad198725-c924-3c6c-86ec-788baeb5ad1d","name":"Public"},"entityType":{"id":"b36a3fb2-660c-3d07-a365-2c5740f91db5","name":"Parent"},"vendor":{"vendorFeedId":110}}}';

	// This test method should give 100% coverage
	static testMethod void testParse() {

		AventionCompanyResultJSON r = AventionCompanyResultJSON.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Industries objIndustries = (AventionCompanyResultJSON.Industries)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Industries.class);
		System.assert(objIndustries != null);
		System.assert(objIndustries.isPrimary == null);
		System.assert(objIndustries.industry == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON objAventionCompanyResultJSON = (AventionCompanyResultJSON)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.class);
		System.assert(objAventionCompanyResultJSON != null);
		System.assert(objAventionCompanyResultJSON.consumedCredits == null);
		System.assert(objAventionCompanyResultJSON.consumedBusinessContactCredits == null);
		System.assert(objAventionCompanyResultJSON.resultType == null);
		System.assert(objAventionCompanyResultJSON.result == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Vendor_Z objVendor_Z = (AventionCompanyResultJSON.Vendor_Z)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Vendor_Z.class);
		System.assert(objVendor_Z != null);
		System.assert(objVendor_Z.vendorFeedId == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.GrossProfit objGrossProfit = (AventionCompanyResultJSON.GrossProfit)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.GrossProfit.class);
		System.assert(objGrossProfit != null);
		System.assert(objGrossProfit.value == null);
		System.assert(objGrossProfit.gbp == null);
		System.assert(objGrossProfit.eur == null);
		System.assert(objGrossProfit.usd == null);
		System.assert(objGrossProfit.statementDate == null);
		System.assert(objGrossProfit.currencyISO3 == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.CurrentRatio objCurrentRatio = (AventionCompanyResultJSON.CurrentRatio)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.CurrentRatio.class);
		System.assert(objCurrentRatio != null);
		System.assert(objCurrentRatio.value == null);
		System.assert(objCurrentRatio.statementDate == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Vendor objVendor = (AventionCompanyResultJSON.Vendor)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Vendor.class);
		System.assert(objVendor != null);
		System.assert(objVendor.vendorFeedId == null);
		System.assert(objVendor.vendorFeedName == null);
		System.assert(objVendor.displayName == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.County objCounty = (AventionCompanyResultJSON.County)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.County.class);
		System.assert(objCounty != null);
		System.assert(objCounty.name == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Result objResult = (AventionCompanyResultJSON.Result)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Result.class);
		System.assert(objResult != null);
		// System.assert(objResult.entityType == null);
		System.assert(objResult.id == null);
		System.assert(objResult.keyId == null);
		System.assert(objResult.dunsNumber == null);
		System.assert(objResult.companyName == null);
		System.assert(objResult.areaCode == null);
		System.assert(objResult.phone == null);
		System.assert(objResult.fiscalYearEnd == null);
		System.assert(objResult.assets == null);
		System.assert(objResult.assetsUsd == null);
		System.assert(objResult.assetsEur == null);
		System.assert(objResult.assetsGbp == null);
		System.assert(objResult.currencyIso3 == null);
		System.assert(objResult.onFortune1000 == null);
		System.assert(objResult.fortune1000Ranking == null);
		System.assert(objResult.numEmployees == null);
		System.assert(objResult.numOneSourceContacts == null);
		System.assert(objResult.primaryUrl == null);
		System.assert(objResult.publicOrTopUK == null);
		System.assert(objResult.publicUS == null);
		System.assert(objResult.quotedStatus == null);
		System.assert(objResult.sales == null);
		System.assert(objResult.salesUsd == null);
		System.assert(objResult.salesEur == null);
		System.assert(objResult.salesGbp == null);
		System.assert(objResult.sales1YearGrowth == null);
		System.assert(objResult.topUK == null);
		System.assert(objResult.onBritishDoNotCallList == null);
		System.assert(objResult.yearFounded == null);
		System.assert(objResult.auditor == null);
		System.assert(objResult.bank == null);
		System.assert(objResult.marketValue == null);
		System.assert(objResult.marketValueUsd == null);
		System.assert(objResult.marketValueEur == null);
		System.assert(objResult.marketValueGbp == null);
		System.assert(objResult.marketValueDate == null);
		System.assert(objResult.gazetteCode == null);
		System.assert(objResult.leId == null);
		System.assert(objResult.currentRatio == null);
		System.assert(objResult.quickRatio == null);
		System.assert(objResult.netProfitMargin == null);
		System.assert(objResult.grossProfit == null);
		System.assert(objResult.grossMargin == null);
		System.assert(objResult.operatingMargin == null);
		System.assert(objResult.returnOnAssets == null);
		System.assert(objResult.returnOnEquity == null);
		System.assert(objResult.cashEquivalents == null);
		System.assert(objResult.leaseHirePurchaseShortTerm == null);
		System.assert(objResult.totalCurrentAssets == null);
		System.assert(objResult.totalCurrentLiabilities == null);
		System.assert(objResult.totalShareholdersEquity == null);
		System.assert(objResult.netIncome == null);
		System.assert(objResult.totalDebt == null);
		System.assert(objResult.longTermDebt == null);
		System.assert(objResult.longTermLiabilities == null);
		System.assert(objResult.totalExpenses == null);
		System.assert(objResult.normalizedEBIT == null);
		System.assert(objResult.normalizedEBITDA == null);
		System.assert(objResult.competitorIds == null);
		System.assert(objResult.totalCorpFamilyMembers == null);
		System.assert(objResult.hasCompanyLogo == null);
		// API fix Alt names field is invalid from avention.
		//System.assert(objResult.altNames == null);
		System.assert(objResult.directMarketingStatus == null);
		System.assert(objResult.addresses == null);
		System.assert(objResult.businessDescriptions == null);
		System.assert(objResult.industries == null);
		System.assert(objResult.securities == null);
		System.assert(objResult.primaryIndustry == null);
		System.assert(objResult.ownershipType == null);
		System.assert(objResult.vendor == null);

		
		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.EntityType objEntityType = (AventionCompanyResultJSON.EntityType)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.EntityType.class);
		System.assert(objEntityType != null);
		System.assert(objEntityType.id == null);
		System.assert(objEntityType.name == null); 
		

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Addresses objAddresses = (AventionCompanyResultJSON.Addresses)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Addresses.class);
		System.assert(objAddresses != null);
		System.assert(objAddresses.addressType == null);
		System.assert(objAddresses.address1 == null);
		System.assert(objAddresses.city == null);
		System.assert(objAddresses.postalCode == null);
		System.assert(objAddresses.postalCodePrefix == null);
		System.assert(objAddresses.county == null);
		System.assert(objAddresses.state == null);
		System.assert(objAddresses.country == null);
		System.assert(objAddresses.zipPlus4Code == null);
		System.assert(objAddresses.msaCode == null);
		System.assert(objAddresses.nationalRegion == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Industry objIndustry = (AventionCompanyResultJSON.Industry)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Industry.class);
		System.assert(objIndustry != null);
		System.assert(objIndustry.id == null);
		System.assert(objIndustry.source == null);
		System.assert(objIndustry.code == null);
		System.assert(objIndustry.shortDescription == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Exchange objExchange = (AventionCompanyResultJSON.Exchange)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Exchange.class);
		System.assert(objExchange != null);
		System.assert(objExchange.stockExchange == null);
		System.assert(objExchange.quoteExchangeCode == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.State objState = (AventionCompanyResultJSON.State)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.State.class);
		System.assert(objState != null);
		System.assert(objState.name == null);
		System.assert(objState.abbreviation == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Country objCountry = (AventionCompanyResultJSON.Country)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Country.class);
		System.assert(objCountry != null);
		System.assert(objCountry.name == null);
		System.assert(objCountry.iso2 == null);
		System.assert(objCountry.iso3 == null);
		System.assert(objCountry.isoNumber == null);
		System.assert(objCountry.intlCallingCode == null);
		System.assert(objCountry.internationalRegion == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.BusinessDescriptions objBusinessDescriptions = (AventionCompanyResultJSON.BusinessDescriptions)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.BusinessDescriptions.class);
		System.assert(objBusinessDescriptions != null);
		System.assert(objBusinessDescriptions.description == null);
		System.assert(objBusinessDescriptions.isPrimary == null);
		System.assert(objBusinessDescriptions.vendor == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		AventionCompanyResultJSON.Securities objSecurities = (AventionCompanyResultJSON.Securities)System.JSON.createParser(json).readValueAs(AventionCompanyResultJSON.Securities.class);
		System.assert(objSecurities != null);
		System.assert(objSecurities.tickerSymbol == null);
		System.assert(objSecurities.exchange == null);


	}

	static testMethod void testOrgConversion(){
		AventionCompanyResultJSON r = AventionCompanyResultJSON.parse(json);
		System.assert(r != null, 'Record Should Not Be null.');

		Org__c myTestOrg = r.toOrg();
		System.assert(myTestOrg.DUNS_Number__c == r.result.dunsNumber);
		System.assert(myTestOrg.D_B_ID__c == r.result.dunsNumber);
		System.assert(myTestOrg.Business_Name__c == r.result.companyName);
		for(AventionCompanyResultJSON.Addresses address: r.result.addresses){
			if(address.addressType=='primary'){
				System.assert(myTestOrg.Address_1__c == address.address1);
				System.assert(myTestOrg.City__c == address.city);
				System.assert(myTestOrg.State__c == address.state.abbreviation);
				System.assert(myTestOrg.Zip__c == address.postalCode);
				break;
			}
		}
		System.assert(myTestOrg.Employee_Count__c == r.result.numEmployees, 'Employee count should match numEmployees');
		System.assert(myTestOrg.Annual_sales__c == r.result.salesUsd, 'Annual sales should match salesusd');
		System.assert(myTestOrg.LOB__c == r.result.primaryIndustry.shortDescription, 'LOB should match short description.');
		System.assert(myTestOrg.Website__c == r.result.primaryUrl, 'Website should match primary URL.');
	}
}